/* eslint-disable @next/next/no-img-element */
import { GetServerSideProps } from 'next'
import Head from 'next/head'
import React from 'react'
import PortableText from 'react-portable-text'
import fetchPostDetails from '../../../utils/Post/fetchPostDetails'
import { FaUserAlt, FaFolder } from 'react-icons/fa'
import { MdAccessTimeFilled } from 'react-icons/md'
import moment from 'moment'
import { urlFor } from '../../../sanity'

import styles from '../../../styles/blogs.module.css'
import Author from '../../../components/Blogs/Author'
import { CommentSection } from '../../../components/Blogs'

interface Props {
  postDetails: Post
}

function Blog({ postDetails }: Props) {
  console.log(postDetails)
  return (
    <>
      <Head>
        <title>Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mx-auto my-10 max-w-5xl space-y-8 px-8 lg:px-0">
        {/* Title */}
        <h2 className="text-center text-2xl font-bold text-gray-700 lg:text-4xl">
          {postDetails.title}
        </h2>

        {/* Description */}
        <div className="mx-auto flex max-w-lg flex-wrap items-center justify-between">
          <div className="flex items-center gap-x-4 text-sm font-light text-gray-500">
            <FaUserAlt />
            <p>{postDetails.author.name}</p>
          </div>
          <div className="flex items-center gap-x-4 text-sm font-light text-gray-500">
            <MdAccessTimeFilled />
            <p>{moment(postDetails._createdAt).format('MMM DD YYYY')}</p>
          </div>
          <div className="flex items-center gap-x-4 text-sm font-light text-gray-500">
            <FaFolder />
            <p className="flex items-center gap-x-2">
              {postDetails.categories.map((category) => (
                <span key={category.title}>{category.title}</span>
              ))}
            </p>
          </div>
        </div>

        {/* Main image */}
        <img
          src={urlFor(postDetails.mainImage).url()}
          alt={postDetails.title}
          className="mx-auto h-[300px] w-full object-cover lg:h-[480px] lg:w-[786px]"
        />

        {/* Main text */}
        <div className={`text-lg leading-8 tracking-wide ${styles.blogImage}`}>
          <PortableText
            className=""
            dataset={process.env.NEXT_PUBLIC_SANITY_DATASET}
            projectId={process.env.NEXT_PUBLIC_SANITY_PROJECT_ID}
            content={postDetails.body}
            serializers={{
              h3: (props: any) => <h2 className="my-5 text-2xl font-bold" {...props} />,
              h4: (props: any) => <h2 className="my-5 text-2xl font-bold" {...props} />,
              normal: (props: any) => <p className="my-5 text-lg" {...props} />,
              li: ({ children }: any) => <li className="ml-4 list-disc">{children}</li>,
              links: ({ href, children }: any) => (
                <a href={href} className="text-blue-500 hover:underline">
                  {children}
                </a>
              ),
            }}
          />
        </div>

        {/* Author */}
        <Author author={postDetails.author} />
        {/* Comment */}
        <CommentSection id={postDetails._id} comments={postDetails.comment}/>
      </div>
    </>
  )
}

export const getServerSideProps: GetServerSideProps<Props> = async ({ params }: any) => {
  const postDetails = await fetchPostDetails(params.slug)

  return {
    props: {
      postDetails,
    },
  }
}

export default Blog
